
@html.extend('layout', function(model) {

 @html.block('meta', function(model) {
    
    <meta property="title" content="CryptoCurrency,BITCOIN valuation | coinplanet.info" />
    <meta name="description" content="CryptoCurrency valuation, calculate value of portfolio in different currencies" />
     <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/dt-1.10.16/datatables.min.css"/>
    })

    @html.block('js', function(model) {
    
    <script type="text/javascript" src="https://cdn.datatables.net/v/dt/dt-1.10.16/datatables.min.js"></script>
    })
    
   @html.block('left', function(model) {
   
   
   })
   
   @html.block('content', function(model) {
   <h2 class="pagination-centered" style="float:middle;">Crypto Currency Balance Tracker</h2>
   
   <a href="#" class="btn btn-xs btn-info" id="aAddCoin" style="color:none;" data-toggle="modal" data-target="#addCoins">
                                      <i class="fa fa-cog fa-2x" aria-hidden="true" ></i>
                                      Add coins
                                  </a>
                                  <br/>
   <div class="row">
    
          <i class="fa fa-cog fa-spin fa-2x fa-fw" id="spinner"></i>
    
       <table class="table table-bordered negative" id="tblvaluation">
           <thead>
    <tr>
    <td colspan="4"></td>
    <td colspan="2" style="text-align:center"><b>Current Price</b></td>
    <td colspan="4" style="text-align:center"><b>Current valuation</b></td>
    <td colspan="2" style="text-align:center"><b>Change(%)</b></td>
    <td colspan="4" style="text-align:center"><b>7day Pnl</b></td>
    </tr>
           <tr>
           <td>Action</td>
           <td>Date</td>
           <td>Symbol</td>
           <td>Qty</td>
           <td>BTC</td>
           <td>USD</td>
           <td>BTC</td>
           <td>USD</td>
           <td>GBP</td>
           <td>EUR</td>
           <td>24h</td>
           <td>7d</td>
           <td>BTC</td>
           <td>USD</td>
           <td>GBP</td>
           <td>EUR</td>
           
           </tr>
          
         </thead>
          <tfoot>
            <tr>
                <th colspan="4" style="text-align:right">Total:</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
             
                
              
            </tr>
        </tfoot>
         
   </table>
    
    </div>
 
   
    
})  
    @html.block('right', function(model) {
    <div class="row">
          <div class="col-md-12"></div>
    </div>
      
          
   })
   
   
})

<div class="modal fade" id="addCoins" role="dialog">
    <div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title text-success">Add coins</h4>
        </div>
        <div class="modal-body">
          <table class="table table-striped table-condensed" border="0">
          
            <tr>
               
                <td><h3>Symbol</h3></td>
             
                <td><h3>Qty</h3></td>
                </tr>
        <tr>
                <td>
                 <span>
                    <ul id="searchResult">
                     <li>  <input type="string" class="symbol searchbox"  placeholder="enter currency symbol"/>
                     <ul class="sub-menu"></ul>
                     </li>
                     
                    </ul>
               
                 <br/>
               
                 </span>
                 </td>
             
                <td><input type="number" class="qty" placeholder="enter quantity"/></td>
                </tr>
    <tr>
     <td colspan="2">
      <div class="message"></div>
      
     </td>
    </tr>            
        
    </table>
        </div>
        <div class="modal-footer">
           <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>&nbsp;
           <button type="button" class="btn btn-success btn-save" data-dismiss="modal">Save</button>
        </div>
      </div>
      
    </div>
  </div>

<script type="text/javascript">
/*
global localStorage
$
numeral
_
*/
var cache={};
var cointrackerDb = new localStorageDB("cointracker", localStorage);

$(document).ready(function(){
 
 

 var promisecrypto = $.ajax('/api/cryptopricefeed/');
 
 if( cointrackerDb.isNew() ) {
  
 
 }
  if (!cointrackerDb.tableExists("coins")){
   cointrackerDb.createTable("coins", ["symbol", "qty","date"]); 
  }
  
 promisecrypto.then(function(crypto,status){
  cache.crypto=crypto;
 });
 
 var promisefiat = $.ajax('/api/fiatpricefeed/');
  promisefiat.then(function(fiat,status){
  cache.fiat=fiat;
 });
   
   $('select#searchResult').hide();
 
 
  $('button.btn-save').on('click',function(){
      save();
  
  });
  
  $('#aAddCoin').on('click',function(){
   
    resetInputBox();
   
   //$('input.symbol').val('');
   
   
  });
  
  var timeoutID = null;
var throttled = _.throttle(findSymbol, 100);
   $('input.symbol').on('keyup',function(e) {
    
     if (e.target.value == "") 
     return ($('select#searchResult').hide());
      throttled(e.target.value);
   
    });
  
 setTimeout(function(){
  
  refreshData();
  $('#spinner').hide();
  
  

  
 },1* 1000)
 
});


function getData(){
 
       var result={};
       result.valuationArray=[];
       result.total={btc:0.000,usd:0.000,gbp:0.000,eur:0.000,pnl_btc_7d:0.000,pnl_usd_7d:0.000,pnl_gbp_7d:0.000,pnl_eur_7d:0.000};
        var data ;
       try{
         data = cointrackerDb.queryAll("coins") ;
       }catch(e){
        
        data=[];
       }
      
       
         var i;
        
        
         //data.forEach(function(i,e){
         for(var k =0;k<data.length;k++){
          
         var valuation={};
         i=data[k];
          var temp = _.findWhere(cache.crypto.data,{symbol:i.symbol});
          
          if (temp){
           
           valuation.id=i.ID;
           valuation.symbol=i.symbol;
           valuation.qty=i.qty;
           valuation.date=i.date;
           valuation.price_btc=temp.price_btc;
           valuation.price_usd=temp.price_usd
           valuation.btc=(temp.price_btc * i.qty);
           valuation.usd=(i.qty * temp.price_usd);
           valuation.gbp= ((i.qty * temp.price_usd) * cache.fiat.rates.GBP) ;
           valuation.eur=((i.qty * temp.price_usd) *  cache.fiat.rates.EUR);
           
           valuation.percent_change_24h= temp.percent_change_24h;
           valuation.percent_change_7d= temp.percent_change_7d;
           
           // 7day pnl
           valuation.pnl_btc_7d= (temp.percent_change_7d * .01)*(valuation.btc);
           valuation.pnl_usd_7d= (temp.percent_change_7d * .01)*(valuation.usd);
           valuation.pnl_gbp_7d= (temp.percent_change_7d * .01)*(valuation.gbp);
           valuation.pnl_eur_7d= (temp.percent_change_7d * .01)*(valuation.eur);
           
           // total 
           result.total.btc += valuation.btc;
           result.total.usd += valuation.usd;
           result.total.gbp += valuation.gbp;
           result.total.eur += valuation.eur;
           // pnl total
           
           result.total.pnl_btc_7d += valuation.pnl_btc_7d;
           result.total.pnl_usd_7d += valuation.pnl_usd_7d;
           result.total.pnl_gbp_7d += valuation.pnl_gbp_7d;
           result.total.pnl_eur_7d += valuation.pnl_eur_7d;
           
           
           result.valuationArray.push(valuation);
           
          }
          
  }
  
   //return [{symbol:"btc",qty:1,gbp:10,usd:20,eur:30}];
   return result;
}

function edit(e){
 
 resetInputBox();


 
 $('input.symbol').val($(e).data("symbol"));
 $('input.qty').val($(e).data("qty"));
 $('input.symbol').data("id",$(e).data("id"));
 
 $('#addCoins').modal();
 
 
 return true;
 
}
function remove(e){
  
 var item={};
 item.id=$(e).data("id");
 
 cointrackerDb.deleteRows("coins", {ID:item.id});
 cointrackerDb.commit();
  refreshData();
  
}

function removeItem(data,item){


}

function findSymbol(str) {
 var url = '/api/cryptopricefeed/' + str;
 var promise = $.ajax(url);
 
 var $list = $('.sub-menu');
 $list.empty();
 $list.show();
 promise.then(function(result,status){
  
  result.data.forEach(function(i,e){
   
   $list.append(`<li><a href='#' onclick="return selectSearchItem(this);" class="search-item" data-symbol="${i.symbol}"> ${i.name} | ${i.symbol}</a></li>`);
   
  
   
  });
  
 });
 promise.catch(function(err){
  console.log(err);
  
 });
     
     
      console.log('search: ' + str);
    }
  
function selectSearchItem(e){
 

 console.log($(e).data("symbol"));
 $('input.symbol').val($(e).data("symbol"));
  $('.sub-menu').slideUp('fast');
 return false;

}

function save(){
 
 $('div.message').text("");
 
 //var data = (localStorage.portfolio) ? JSON.parse(localStorage.portfolio):[];
 var item={};   
 var bsave=true;
 
 item.symbol= $('input.symbol').val().toLocaleUpperCase();
 item.id = $('input.symbol').data('id') || -1;
 item.qty= $('input.qty').val();
 
 item.date=new Date();
 
 if (item.symbol.length <3)
 {
   $('div.message').text('invalid symbol');
   bsave=false;
 }
 else if (item.qty <=0)
 {
   $('div.message').text('invalid qty');
   bsave=false;
 }
 
 if (bsave)
 {
  
 var url ='/api/search/crypto/' + item.symbol;
 var promise = $.ajax(url);
 
 promise.then(function(result,statuscode){
  
   if ((result.data.length || 0)==0){
    
    $('div.message').text('invalid symbol');
    return false;
   }
   
   // save 
   //removeItem(data,item.symbol);
   // add new item
   //data.push(item);
   
  // var rows = [item	];

	// create the table and insert records in one go
	 cointrackerDb.insertOrUpdate("coins", {ID:item.id},item);

 cointrackerDb.commit();
	refreshData();
 return true;
 
 });
 
 }
 
 return false;
}

function refreshData(){
 var coins = getData();
  $('#tblvaluation').DataTable(
  {
        "data":coins.valuationArray,
        "footerCallback":function(data, type, row, meta){
         
          var api = this.api();
          
         $(api.column(6).footer()).html(numeral(coins.total.btc).format("0,0.000")); 
         $(api.column(7).footer()).html(numeral(coins.total.usd).format("0,0.000"));
         $(api.column(8).footer()).html(numeral(coins.total.gbp).format("0,0.000"));
         $(api.column(9).footer()).html(numeral(coins.total.eur).format("0,0.000"));
         // pnl
         $(api.column(12).footer()).html(numeral(coins.total.pnl_btc_7d).format("0,0.000")); 
         $(api.column(13).footer()).html(numeral(coins.total.pnl_usd_7d).format("0,0.000"));
         $(api.column(14).footer()).html(numeral(coins.total.pnl_gbp_7d).format("0,0.000"));
         $(api.column(15).footer()).html(numeral(coins.total.pnl_eur_7d).format("0,0.000"));
        
        },
        "destroy": true,
        "columns": [
         {data:"", "render": function ( data, type, row, meta ) { return   `<button 
                  class="btn btn-warning"
                  data-id="${row.id}"
                   data-symbol="${row.symbol}"
                  data-qty="${row.qty}"
                  onclick="return edit(this);">Edit</button>
                  &nbsp;
                  <button 
                    class="btn btn-danger"
                  data-symbol="${row.symbol}"
                  data-qty="${row.qty}"
                  data-id="${row.id}"
                  onclick="return remove(this);" >Delete
                  </button>`; }
          
         },
            {data:"","render":function ( data, type, row, meta ){
             
             return (moment(row.date).format("MMM Do YY"));
            }
             
            },
            { data: "symbol" },
            { data: "" ,"render":function ( data, type, row, meta ){return numeral(row.qty).format("0,0.000");}},
            { data: "" ,"render":function ( data, type, row, meta ){return numeral(row.price_btc).format("0,0.000");}},
            { data: "" ,"render":function ( data, type, row, meta ){return numeral(row.price_usd).format("0,0.000");}},
            { data: "" ,"render":function ( data, type, row, meta ){return numeral(row.btc).format("0,0.000");}},
            { data: "" ,"render":function ( data, type, row, meta ){return numeral(row.usd).format("0,0.000");}},
            { data: "." ,"render":function ( data, type, row, meta ){return numeral(row.gbp).format("0,0.000");}},
            { data: "" ,"render":function ( data, type, row, meta ){return numeral(row.eur).format("0,0.000");}},
            { data: "" ,"render": function ( data, type, row, meta ){
             var css='';
                       if (row.percent_change_24h>0) css="text-success"; else css="text-danger";
                       return `<span class="${css}">${row.percent_change_24h}</span>`;
            }},
            { data: "" ,"render": function ( data, type, row, meta ){
             var css='';
                       if (row.percent_change_7d>0) css="text-success"; else css="text-danger";
                       return `<span class="${css}">${row.percent_change_7d}</span>`;
            }},
            { data: "" ,"render":function ( data, type, row, meta ){return numeral(row.pnl_btc_7d).format("0,0.000");}},
            { data: "" ,"render":function ( data, type, row, meta ){return numeral(row.pnl_usd_7d).format("0,0.000");}},
            { data: "" ,"render":function ( data, type, row, meta ){return numeral(row.pnl_gbp_7d).format("0,0.000");}},
            { data: "" ,"render":function ( data, type, row, meta ){return numeral(row.pnl_eur_7d).format("0,0.000");}},
            
            
        ]
        
    }
  );
 
}

function resetInputBox(){
 $('.sub-menu').empty();
 $('input.symbol').data('id',-1);
 $('input.symbol').val('');
 $('input.qty').val('0.000');
 $('select#searchResult').empty();
 ($('select#searchResult').hide());
 
}
  
</script>
 


 
           